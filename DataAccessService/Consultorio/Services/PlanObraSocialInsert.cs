// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by SqlPlus.net
//     Generated DateTime: 05-Nov-19 10:28:59 PM
//     For more information on SqlPlus.net visit http://www.SqlPlus.net
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

using System;
using System.Data;
using System.Data.SqlClient;
using System.Collections.Generic;
using DataAccessService.Consultorio.Models;

namespace DataAccessService.Consultorio
{
    public partial class Service
    {

        /// <summary>
        /// Builds the command object for PlanObraSocialInsert method.
        /// </summary>
        /// <param name="cnn">The connection that will execute the procedure.</param>
        /// <param name="input">PlanObraSocialInsertInput instance for loading parameter values.</param>
        /// <returns>SqlCommand ready for execution.</returns>
        private SqlCommand GetPlanObraSocialInsertCommand(SqlConnection cnn, IPlanObraSocialInsertInput input)
        {
            SqlCommand result = new SqlCommand()
            {
                CommandType = CommandType.StoredProcedure,
                CommandText = "dbo.PlanObraSocialInsert",
                Connection = cnn
            };

            result.Parameters.Add(new SqlParameter()
            {
                ParameterName = "@IdPlanObraSocial",
                Direction = ParameterDirection.Output,
                SqlDbType = SqlDbType.Int,
                Scale = 0,
                Precision = 10,
                Value = DBNull.Value
            });

            result.Parameters.Add(new SqlParameter()
            {
                ParameterName = "@IdObraSocial",
                Direction = ParameterDirection.Input,
                SqlDbType = SqlDbType.Int,
                Scale = 0,
                Precision = 10,
				Value = (object)input.IdObraSocial ?? DBNull.Value
            });

            result.Parameters.Add(new SqlParameter()
            {
                ParameterName = "@Nombre",
                Direction = ParameterDirection.Input,
                SqlDbType = SqlDbType.VarChar,
                Size = 50,
				Value = (object)input.Nombre ?? DBNull.Value
            });

            result.Parameters.Add(new SqlParameter()
            {
                ParameterName = "@Habilitado",
                Direction = ParameterDirection.Input,
                SqlDbType = SqlDbType.Bit,
				Value = (object)input.Habilitado ?? DBNull.Value
            });

            result.Parameters.Add(new SqlParameter()
            {
                ParameterName = "@ReturnValue",
                Direction = ParameterDirection.ReturnValue,
                SqlDbType = SqlDbType.Int,
                Scale = 0,
                Precision = 10,
                Value = DBNull.Value
            });

            return result;
        }
        private void SetPlanObraSocialInsertCommandOutputs(SqlCommand cmd, PlanObraSocialInsertOutput output)
        {
            if(cmd.Parameters[0].Value != DBNull.Value)
            {
                output.IdPlanObraSocial = (int?)cmd.Parameters[0].Value;
            }
            if(cmd.Parameters[4].Value != DBNull.Value)
            {
                output.ReturnValue = (PlanObraSocialInsertOutput.Returns)cmd.Parameters[4].Value;
            }
        }
        private void PlanObraSocialInsertCommand(SqlCommand cmd, PlanObraSocialInsertOutput output)
        {
            cmd.ExecuteNonQuery();
		
            SetPlanObraSocialInsertCommandOutputs(cmd, output);
		}

        /// <summary>
        /// Inserts a new record into the dbo.PlanObraSocial table.
        /// SQL+ Routine: dbo.PlanObraSocialInsert - Authored by Ivo Strficek
        /// </summary>
        public PlanObraSocialInsertOutput PlanObraSocialInsert(IPlanObraSocialInsertInput input)
        {
            if (!input.IsValid())
            {
		        throw new ArgumentException("PlanObraSocialInsertInput fails validation - use the PlanObraSocialInsertInput.IsValid() method prior to passing the input argument to the PlanObraSocialInsert method.", "input");
            }
			
            PlanObraSocialInsertOutput output = new PlanObraSocialInsertOutput();
			if(sqlConnection != null)
            {
                using (SqlCommand cmd = GetPlanObraSocialInsertCommand(sqlConnection, input))
                {
                    cmd.Transaction = sqlTransaction;
                    PlanObraSocialInsertCommand(cmd, output);
                }
                return output;
            }
            for(int idx=0; idx <= retryOptions.RetryIntervals.Count; idx++)
            {
                if(idx > 0)
                {
                    System.Threading.Thread.Sleep(retryOptions.RetryIntervals[idx-1]);
                }
                try
                {
                    using (SqlConnection cnn = new SqlConnection(connectionString))
                    using (SqlCommand cmd = GetPlanObraSocialInsertCommand(cnn, input))
                    {
                        cnn.Open();
						PlanObraSocialInsertCommand(cmd, output);
                        cnn.Close();
                    }
					break;
                }
                catch(SqlException sqlException)
                {
                    bool throwException = true;

                    if(retryOptions.TransientErrorNumbers.Contains(sqlException.Number))
                    {
                        throwException = (idx == retryOptions.RetryIntervals.Count);

                        if (retryOptions.Logger != null)
                        {
                            retryOptions.Logger.Log(sqlException);
                        }
                    }
                    if(throwException)
                    {
                        throw;
                    }
                }
            }
            return output;
        }
    }
}